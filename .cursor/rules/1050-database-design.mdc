---
description: 
globs: *.md
alwaysApply: false
---
# 数据库设计标准

<version>1.0.0</version>

## Context
- 设计数据库表和 schema 时应用
- 编写 SQL DDL 语句时应用  
- 创建数据库迁移文件时应用
- 确保所有数据库设计工作的一致性

## Requirements

### 字段组织结构
- 审计字段必须置顶：`id, created_at, updated_at, deleted_at`
- 相关字段逻辑分组，使用注释分隔
- 按顺序：审计字段 → 核心业务字段 → 关联字段 → 元数据字段

### 命名规范
- 避免冗余前缀，如在 business 表中用 `title` 而不是 `business_title`
- 使用 snake_case 命名
- 外部业务ID使用 `external_id`，内表关联使用 `table_id`
- 上下文明确时使用简化名称：`type` 而不是 `business_type`

### 数据类型约束  
- 所有ID字段使用 `VARCHAR(50)` 提供格式灵活性
- 最小化 `NULL` 字段，提供合理默认值
- 字符串字段：`NOT NULL DEFAULT ''`
- JSONB字段：`NOT NULL DEFAULT '{}'`  
- 数值字段：`NOT NULL DEFAULT 0`
- 时间字段：必须使用 `TIMESTAMPTZ` 而非 `TIMESTAMP`

### 软删除实现
- 所有表必须包含 `deleted_at TIMESTAMPTZ` 字段
- 唯一约束必须排除软删除：`WHERE deleted_at IS NULL`
- 所有索引必须过滤软删除记录

### 约束策略
- 禁用物理外键 `REFERENCES` 约束
- 使用逻辑关联和注释说明关系
- 索引都要包含软删除过滤条件

## Examples

<example>
CREATE TABLE reward_businesses (
    -- 审计字段
    id VARCHAR(50) PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMPTZ,
    
    -- 基础信息
    user_id VARCHAR(50) NOT NULL,
    type VARCHAR(50) NOT NULL,
    external_id VARCHAR(100) NOT NULL,
    
    -- 业务信息
    title VARCHAR(200) NOT NULL DEFAULT '',
    description TEXT NOT NULL DEFAULT '',
    detail JSONB NOT NULL DEFAULT '{}',
    
    UNIQUE(type, external_id) WHERE deleted_at IS NULL
);

CREATE INDEX idx_reward_businesses_user_id 
ON reward_businesses(user_id) WHERE deleted_at IS NULL;
</example>

<example type="invalid">
CREATE TABLE user_profile_table (
    user_profile_id UUID PRIMARY KEY,
    user_profile_title VARCHAR(200) NULL,
    user_profile_detail JSONB NULL,
    user_profile_created_at TIMESTAMP DEFAULT NOW(),
    parent_id UUID REFERENCES users(id),
    
    UNIQUE(user_profile_type, user_profile_business_id)
);

问题：UUID类型ID、冗余前缀、NULL字段、无时区时间戳、物理外键、缺少软删除、审计字段不在顶部
</example>
